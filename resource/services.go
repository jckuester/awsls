// Code is generated. DO NOT EDIT.

package resource

// Services contains the name of the AWS service that each resource type belongs to.
var Services = map[string]string{
	"aws_accessanalyzer_analyzer":                             "accessanalyzer",
	"aws_acm_certificate":                                     "acm",
	"aws_acm_certificate_validation":                          "acm",
	"aws_acmpca_certificate_authority":                        "acmpca",
	"aws_alb":                                                 "elbv2",
	"aws_alb_listener":                                        "elbv2",
	"aws_alb_listener_certificate":                            "elbv2",
	"aws_alb_listener_rule":                                   "elbv2",
	"aws_alb_target_group":                                    "elbv2",
	"aws_alb_target_group_attachment":                         "elbv2",
	"aws_ami":                                                 "ec2",
	"aws_ami_copy":                                            "ec2",
	"aws_ami_from_instance":                                   "ec2",
	"aws_ami_launch_permission":                               "ec2",
	"aws_api_gateway_account":                                 "apigateway",
	"aws_api_gateway_api_key":                                 "apigateway",
	"aws_api_gateway_authorizer":                              "apigateway",
	"aws_api_gateway_base_path_mapping":                       "apigateway",
	"aws_api_gateway_client_certificate":                      "apigateway",
	"aws_api_gateway_deployment":                              "apigateway",
	"aws_api_gateway_documentation_part":                      "apigateway",
	"aws_api_gateway_documentation_version":                   "apigateway",
	"aws_api_gateway_domain_name":                             "apigateway",
	"aws_api_gateway_gateway_response":                        "apigateway",
	"aws_api_gateway_integration":                             "apigateway",
	"aws_api_gateway_integration_response":                    "apigateway",
	"aws_api_gateway_method":                                  "apigateway",
	"aws_api_gateway_method_response":                         "apigateway",
	"aws_api_gateway_method_settings":                         "apigateway",
	"aws_api_gateway_model":                                   "apigateway",
	"aws_api_gateway_request_validator":                       "apigateway",
	"aws_api_gateway_resource":                                "apigateway",
	"aws_api_gateway_rest_api":                                "apigateway",
	"aws_api_gateway_rest_api_policy":                         "apigateway",
	"aws_api_gateway_stage":                                   "apigateway",
	"aws_api_gateway_usage_plan":                              "apigateway",
	"aws_api_gateway_usage_plan_key":                          "apigateway",
	"aws_api_gateway_vpc_link":                                "apigateway",
	"aws_apigatewayv2_api":                                    "apigatewayv2",
	"aws_apigatewayv2_api_mapping":                            "apigatewayv2",
	"aws_apigatewayv2_authorizer":                             "apigatewayv2",
	"aws_apigatewayv2_deployment":                             "apigatewayv2",
	"aws_apigatewayv2_domain_name":                            "apigatewayv2",
	"aws_apigatewayv2_integration":                            "apigatewayv2",
	"aws_apigatewayv2_integration_response":                   "apigatewayv2",
	"aws_apigatewayv2_model":                                  "apigatewayv2",
	"aws_apigatewayv2_route":                                  "apigatewayv2",
	"aws_apigatewayv2_route_response":                         "apigatewayv2",
	"aws_apigatewayv2_stage":                                  "apigatewayv2",
	"aws_apigatewayv2_vpc_link":                               "apigatewayv2",
	"aws_app_cookie_stickiness_policy":                        "elb",
	"aws_appautoscaling_policy":                               "applicationautoscaling",
	"aws_appautoscaling_scheduled_action":                     "applicationautoscaling",
	"aws_appautoscaling_target":                               "applicationautoscaling",
	"aws_appmesh_gateway_route":                               "appmesh",
	"aws_appmesh_mesh":                                        "appmesh",
	"aws_appmesh_route":                                       "appmesh",
	"aws_appmesh_virtual_gateway":                             "appmesh",
	"aws_appmesh_virtual_node":                                "appmesh",
	"aws_appmesh_virtual_router":                              "appmesh",
	"aws_appmesh_virtual_service":                             "appmesh",
	"aws_appsync_api_key":                                     "appsync",
	"aws_appsync_datasource":                                  "appsync",
	"aws_appsync_function":                                    "appsync",
	"aws_appsync_graphql_api":                                 "appsync",
	"aws_appsync_resolver":                                    "appsync",
	"aws_athena_database":                                     "athena",
	"aws_athena_named_query":                                  "athena",
	"aws_athena_workgroup":                                    "athena",
	"aws_autoscaling_attachment":                              "autoscaling",
	"aws_autoscaling_group":                                   "autoscaling",
	"aws_autoscaling_lifecycle_hook":                          "autoscaling",
	"aws_autoscaling_notification":                            "autoscaling",
	"aws_autoscaling_policy":                                  "autoscaling",
	"aws_autoscaling_schedule":                                "autoscaling",
	"aws_autoscalingplans_scaling_plan":                       "autoscalingplans",
	"aws_backup_global_settings":                              "backup",
	"aws_backup_plan":                                         "backup",
	"aws_backup_region_settings":                              "backup",
	"aws_backup_selection":                                    "backup",
	"aws_backup_vault":                                        "backup",
	"aws_backup_vault_notifications":                          "backup",
	"aws_backup_vault_policy":                                 "backup",
	"aws_batch_compute_environment":                           "batch",
	"aws_batch_job_definition":                                "batch",
	"aws_batch_job_queue":                                     "batch",
	"aws_budgets_budget":                                      "budgets",
	"aws_cloud9_environment_ec2":                              "cloud9",
	"aws_cloudformation_stack":                                "cloudformation",
	"aws_cloudformation_stack_set":                            "cloudformation",
	"aws_cloudformation_stack_set_instance":                   "cloudformation",
	"aws_cloudfront_cache_policy":                             "cloudfront",
	"aws_cloudfront_distribution":                             "cloudfront",
	"aws_cloudfront_origin_access_identity":                   "cloudfront",
	"aws_cloudfront_origin_request_policy":                    "cloudfront",
	"aws_cloudfront_public_key":                               "cloudfront",
	"aws_cloudfront_realtime_log_config":                      "cloudfront",
	"aws_cloudhsm_v2_cluster":                                 "cloudhsmv2",
	"aws_cloudhsm_v2_hsm":                                     "cloudhsmv2",
	"aws_cloudtrail":                                          "cloudtrail",
	"aws_cloudwatch_composite_alarm":                          "cloudwatch",
	"aws_cloudwatch_dashboard":                                "cloudwatch",
	"aws_cloudwatch_event_archive":                            "cloudwatchevents",
	"aws_cloudwatch_event_bus":                                "cloudwatchevents",
	"aws_cloudwatch_event_permission":                         "cloudwatchevents",
	"aws_cloudwatch_event_rule":                               "cloudwatchevents",
	"aws_cloudwatch_event_target":                             "cloudwatchevents",
	"aws_cloudwatch_log_destination":                          "cloudwatchlogs",
	"aws_cloudwatch_log_destination_policy":                   "cloudwatchlogs",
	"aws_cloudwatch_log_group":                                "cloudwatchlogs",
	"aws_cloudwatch_log_metric_filter":                        "cloudwatchlogs",
	"aws_cloudwatch_log_resource_policy":                      "cloudwatchlogs",
	"aws_cloudwatch_log_stream":                               "cloudwatchlogs",
	"aws_cloudwatch_log_subscription_filter":                  "cloudwatchlogs",
	"aws_cloudwatch_metric_alarm":                             "cloudwatch",
	"aws_codeartifact_domain":                                 "codeartifact",
	"aws_codeartifact_domain_permissions_policy":              "codeartifact",
	"aws_codeartifact_repository":                             "codeartifact",
	"aws_codeartifact_repository_permissions_policy":          "codeartifact",
	"aws_codebuild_project":                                   "codebuild",
	"aws_codebuild_report_group":                              "codebuild",
	"aws_codebuild_source_credential":                         "codebuild",
	"aws_codebuild_webhook":                                   "codebuild",
	"aws_codecommit_repository":                               "codecommit",
	"aws_codecommit_trigger":                                  "codecommit",
	"aws_codedeploy_app":                                      "codedeploy",
	"aws_codedeploy_deployment_config":                        "codedeploy",
	"aws_codedeploy_deployment_group":                         "codedeploy",
	"aws_codepipeline":                                        "codepipeline",
	"aws_codepipeline_webhook":                                "codepipeline",
	"aws_codestarconnections_connection":                      "codestarconnections",
	"aws_codestarnotifications_notification_rule":             "codestarnotifications",
	"aws_cognito_identity_pool":                               "cognitoidentity",
	"aws_cognito_identity_pool_roles_attachment":              "cognitoidentity",
	"aws_cognito_identity_provider":                           "cognitoidentityprovider",
	"aws_cognito_resource_server":                             "cognitoidentityprovider",
	"aws_cognito_user_group":                                  "cognitoidentityprovider",
	"aws_cognito_user_pool":                                   "cognitoidentityprovider",
	"aws_cognito_user_pool_client":                            "cognitoidentityprovider",
	"aws_cognito_user_pool_domain":                            "cognitoidentityprovider",
	"aws_cognito_user_pool_ui_customization":                  "cognitoidentityprovider",
	"aws_config_aggregate_authorization":                      "configservice",
	"aws_config_config_rule":                                  "configservice",
	"aws_config_configuration_aggregator":                     "configservice",
	"aws_config_configuration_recorder":                       "configservice",
	"aws_config_configuration_recorder_status":                "configservice",
	"aws_config_conformance_pack":                             "configservice",
	"aws_config_delivery_channel":                             "configservice",
	"aws_config_organization_custom_rule":                     "configservice",
	"aws_config_organization_managed_rule":                    "configservice",
	"aws_config_remediation_configuration":                    "configservice",
	"aws_cur_report_definition":                               "costandusagereportservice",
	"aws_customer_gateway":                                    "ec2",
	"aws_datapipeline_pipeline":                               "datapipeline",
	"aws_datasync_agent":                                      "datasync",
	"aws_datasync_location_efs":                               "datasync",
	"aws_datasync_location_fsx_windows_file_system":           "datasync",
	"aws_datasync_location_nfs":                               "datasync",
	"aws_datasync_location_s3":                                "datasync",
	"aws_datasync_location_smb":                               "datasync",
	"aws_datasync_task":                                       "datasync",
	"aws_dax_cluster":                                         "dax",
	"aws_dax_parameter_group":                                 "dax",
	"aws_dax_subnet_group":                                    "dax",
	"aws_db_cluster_snapshot":                                 "rds",
	"aws_db_event_subscription":                               "rds",
	"aws_db_instance":                                         "rds",
	"aws_db_instance_role_association":                        "rds",
	"aws_db_option_group":                                     "rds",
	"aws_db_parameter_group":                                  "rds",
	"aws_db_proxy":                                            "rds",
	"aws_db_proxy_default_target_group":                       "rds",
	"aws_db_proxy_target":                                     "rds",
	"aws_db_security_group":                                   "rds",
	"aws_db_snapshot":                                         "rds",
	"aws_db_subnet_group":                                     "rds",
	"aws_default_network_acl":                                 "ec2",
	"aws_default_route_table":                                 "ec2",
	"aws_default_security_group":                              "ec2",
	"aws_default_subnet":                                      "ec2",
	"aws_default_vpc":                                         "ec2",
	"aws_default_vpc_dhcp_options":                            "ec2",
	"aws_devicefarm_project":                                  "devicefarm",
	"aws_directory_service_conditional_forwarder":             "directoryservice",
	"aws_directory_service_directory":                         "directoryservice",
	"aws_directory_service_log_subscription":                  "directoryservice",
	"aws_dlm_lifecycle_policy":                                "dlm",
	"aws_dms_certificate":                                     "databasemigrationservice",
	"aws_dms_endpoint":                                        "databasemigrationservice",
	"aws_dms_event_subscription":                              "databasemigrationservice",
	"aws_dms_replication_instance":                            "databasemigrationservice",
	"aws_dms_replication_subnet_group":                        "databasemigrationservice",
	"aws_dms_replication_task":                                "databasemigrationservice",
	"aws_docdb_cluster":                                       "docdb",
	"aws_docdb_cluster_instance":                              "docdb",
	"aws_docdb_cluster_parameter_group":                       "docdb",
	"aws_docdb_cluster_snapshot":                              "docdb",
	"aws_docdb_subnet_group":                                  "docdb",
	"aws_dx_bgp_peer":                                         "directconnect",
	"aws_dx_connection":                                       "directconnect",
	"aws_dx_connection_association":                           "directconnect",
	"aws_dx_gateway":                                          "directconnect",
	"aws_dx_gateway_association":                              "directconnect",
	"aws_dx_gateway_association_proposal":                     "directconnect",
	"aws_dx_hosted_private_virtual_interface":                 "directconnect",
	"aws_dx_hosted_private_virtual_interface_accepter":        "directconnect",
	"aws_dx_hosted_public_virtual_interface":                  "directconnect",
	"aws_dx_hosted_public_virtual_interface_accepter":         "directconnect",
	"aws_dx_hosted_transit_virtual_interface":                 "directconnect",
	"aws_dx_hosted_transit_virtual_interface_accepter":        "directconnect",
	"aws_dx_lag":                                              "directconnect",
	"aws_dx_private_virtual_interface":                        "directconnect",
	"aws_dx_public_virtual_interface":                         "directconnect",
	"aws_dx_transit_virtual_interface":                        "directconnect",
	"aws_dynamodb_global_table":                               "dynamodb",
	"aws_dynamodb_table":                                      "dynamodb",
	"aws_dynamodb_table_item":                                 "dynamodb",
	"aws_ebs_default_kms_key":                                 "ec2",
	"aws_ebs_encryption_by_default":                           "ec2",
	"aws_ebs_snapshot":                                        "ec2",
	"aws_ebs_snapshot_copy":                                   "ec2",
	"aws_ebs_volume":                                          "ec2",
	"aws_ec2_availability_zone_group":                         "ec2",
	"aws_ec2_capacity_reservation":                            "ec2",
	"aws_ec2_carrier_gateway":                                 "ec2",
	"aws_ec2_client_vpn_authorization_rule":                   "ec2",
	"aws_ec2_client_vpn_endpoint":                             "ec2",
	"aws_ec2_client_vpn_network_association":                  "ec2",
	"aws_ec2_client_vpn_route":                                "ec2",
	"aws_ec2_fleet":                                           "ec2",
	"aws_ec2_local_gateway_route":                             "ec2",
	"aws_ec2_local_gateway_route_table_vpc_association":       "ec2",
	"aws_ec2_managed_prefix_list":                             "ec2",
	"aws_ec2_traffic_mirror_filter":                           "ec2",
	"aws_ec2_traffic_mirror_filter_rule":                      "ec2",
	"aws_ec2_traffic_mirror_session":                          "ec2",
	"aws_ec2_traffic_mirror_target":                           "ec2",
	"aws_ec2_transit_gateway":                                 "ec2",
	"aws_ec2_transit_gateway_peering_attachment":              "ec2",
	"aws_ec2_transit_gateway_peering_attachment_accepter":     "ec2",
	"aws_ec2_transit_gateway_prefix_list_reference":           "ec2",
	"aws_ec2_transit_gateway_route":                           "ec2",
	"aws_ec2_transit_gateway_route_table":                     "ec2",
	"aws_ec2_transit_gateway_route_table_association":         "ec2",
	"aws_ec2_transit_gateway_route_table_propagation":         "ec2",
	"aws_ec2_transit_gateway_vpc_attachment":                  "ec2",
	"aws_ec2_transit_gateway_vpc_attachment_accepter":         "ec2",
	"aws_ecr_lifecycle_policy":                                "ecr",
	"aws_ecr_repository":                                      "ecr",
	"aws_ecr_repository_policy":                               "ecr",
	"aws_ecrpublic_repository":                                "ecrpublic",
	"aws_ecs_capacity_provider":                               "ecs",
	"aws_ecs_cluster":                                         "ecs",
	"aws_ecs_service":                                         "ecs",
	"aws_ecs_task_definition":                                 "ecs",
	"aws_efs_access_point":                                    "efs",
	"aws_efs_file_system":                                     "efs",
	"aws_efs_file_system_policy":                              "efs",
	"aws_efs_mount_target":                                    "efs",
	"aws_egress_only_internet_gateway":                        "ec2",
	"aws_eip":                                                 "ec2",
	"aws_eip_association":                                     "ec2",
	"aws_eks_cluster":                                         "eks",
	"aws_eks_fargate_profile":                                 "eks",
	"aws_eks_node_group":                                      "eks",
	"aws_elastic_beanstalk_application":                       "elasticbeanstalk",
	"aws_elastic_beanstalk_application_version":               "elasticbeanstalk",
	"aws_elastic_beanstalk_configuration_template":            "elasticbeanstalk",
	"aws_elastic_beanstalk_environment":                       "elasticbeanstalk",
	"aws_elasticache_cluster":                                 "elasticache",
	"aws_elasticache_global_replication_group":                "elasticache",
	"aws_elasticache_parameter_group":                         "elasticache",
	"aws_elasticache_replication_group":                       "elasticache",
	"aws_elasticache_security_group":                          "elasticache",
	"aws_elasticache_subnet_group":                            "elasticache",
	"aws_elasticsearch_domain":                                "elasticsearchservice",
	"aws_elasticsearch_domain_policy":                         "elasticsearchservice",
	"aws_elastictranscoder_pipeline":                          "elastictranscoder",
	"aws_elastictranscoder_preset":                            "elastictranscoder",
	"aws_elb":                                                 "elb",
	"aws_elb_attachment":                                      "elb",
	"aws_emr_cluster":                                         "emr",
	"aws_emr_instance_fleet":                                  "emr",
	"aws_emr_instance_group":                                  "emr",
	"aws_emr_managed_scaling_policy":                          "emr",
	"aws_emr_security_configuration":                          "emr",
	"aws_flow_log":                                            "ec2",
	"aws_fms_admin_account":                                   "fms",
	"aws_fms_policy":                                          "fms",
	"aws_fsx_lustre_file_system":                              "fsx",
	"aws_fsx_windows_file_system":                             "fsx",
	"aws_gamelift_alias":                                      "gamelift",
	"aws_gamelift_build":                                      "gamelift",
	"aws_gamelift_fleet":                                      "gamelift",
	"aws_gamelift_game_session_queue":                         "gamelift",
	"aws_glacier_vault":                                       "glacier",
	"aws_glacier_vault_lock":                                  "glacier",
	"aws_globalaccelerator_accelerator":                       "globalaccelerator",
	"aws_globalaccelerator_endpoint_group":                    "globalaccelerator",
	"aws_globalaccelerator_listener":                          "globalaccelerator",
	"aws_glue_catalog_database":                               "glue",
	"aws_glue_catalog_table":                                  "glue",
	"aws_glue_classifier":                                     "glue",
	"aws_glue_connection":                                     "glue",
	"aws_glue_crawler":                                        "glue",
	"aws_glue_data_catalog_encryption_settings":               "glue",
	"aws_glue_dev_endpoint":                                   "glue",
	"aws_glue_job":                                            "glue",
	"aws_glue_ml_transform":                                   "glue",
	"aws_glue_partition":                                      "glue",
	"aws_glue_registry":                                       "glue",
	"aws_glue_resource_policy":                                "glue",
	"aws_glue_schema":                                         "glue",
	"aws_glue_security_configuration":                         "glue",
	"aws_glue_trigger":                                        "glue",
	"aws_glue_user_defined_function":                          "glue",
	"aws_glue_workflow":                                       "glue",
	"aws_guardduty_detector":                                  "guardduty",
	"aws_guardduty_filter":                                    "guardduty",
	"aws_guardduty_invite_accepter":                           "guardduty",
	"aws_guardduty_ipset":                                     "guardduty",
	"aws_guardduty_member":                                    "guardduty",
	"aws_guardduty_organization_admin_account":                "guardduty",
	"aws_guardduty_organization_configuration":                "guardduty",
	"aws_guardduty_publishing_destination":                    "guardduty",
	"aws_guardduty_threatintelset":                            "guardduty",
	"aws_iam_access_key":                                      "iam",
	"aws_iam_account_alias":                                   "iam",
	"aws_iam_account_password_policy":                         "iam",
	"aws_iam_group":                                           "iam",
	"aws_iam_group_membership":                                "iam",
	"aws_iam_group_policy":                                    "iam",
	"aws_iam_group_policy_attachment":                         "iam",
	"aws_iam_instance_profile":                                "iam",
	"aws_iam_openid_connect_provider":                         "iam",
	"aws_iam_policy":                                          "iam",
	"aws_iam_policy_attachment":                               "iam",
	"aws_iam_role":                                            "iam",
	"aws_iam_role_policy":                                     "iam",
	"aws_iam_role_policy_attachment":                          "iam",
	"aws_iam_saml_provider":                                   "iam",
	"aws_iam_server_certificate":                              "iam",
	"aws_iam_service_linked_role":                             "iam",
	"aws_iam_user":                                            "iam",
	"aws_iam_user_group_membership":                           "iam",
	"aws_iam_user_login_profile":                              "iam",
	"aws_iam_user_policy":                                     "iam",
	"aws_iam_user_policy_attachment":                          "iam",
	"aws_iam_user_ssh_key":                                    "iam",
	"aws_imagebuilder_component":                              "imagebuilder",
	"aws_imagebuilder_distribution_configuration":             "imagebuilder",
	"aws_imagebuilder_image":                                  "imagebuilder",
	"aws_imagebuilder_image_pipeline":                         "imagebuilder",
	"aws_imagebuilder_image_recipe":                           "imagebuilder",
	"aws_imagebuilder_infrastructure_configuration":           "imagebuilder",
	"aws_inspector_assessment_target":                         "inspector",
	"aws_inspector_assessment_template":                       "inspector",
	"aws_inspector_resource_group":                            "inspector",
	"aws_instance":                                            "ec2",
	"aws_internet_gateway":                                    "ec2",
	"aws_iot_certificate":                                     "iot",
	"aws_iot_policy":                                          "iot",
	"aws_iot_policy_attachment":                               "iot",
	"aws_iot_role_alias":                                      "iot",
	"aws_iot_thing":                                           "iot",
	"aws_iot_thing_principal_attachment":                      "iot",
	"aws_iot_thing_type":                                      "iot",
	"aws_iot_topic_rule":                                      "iot",
	"aws_key_pair":                                            "ec2",
	"aws_kinesis_analytics_application":                       "kinesisanalytics",
	"aws_kinesis_firehose_delivery_stream":                    "firehose",
	"aws_kinesis_stream":                                      "kinesis",
	"aws_kinesis_video_stream":                                "kinesisvideo",
	"aws_kinesisanalyticsv2_application":                      "kinesisanalyticsv2",
	"aws_kms_alias":                                           "kms",
	"aws_kms_ciphertext":                                      "kms",
	"aws_kms_external_key":                                    "kms",
	"aws_kms_grant":                                           "kms",
	"aws_kms_key":                                             "kms",
	"aws_lakeformation_data_lake_settings":                    "lakeformation",
	"aws_lakeformation_permissions":                           "lakeformation",
	"aws_lakeformation_resource":                              "lakeformation",
	"aws_lambda_alias":                                        "lambda",
	"aws_lambda_code_signing_config":                          "lambda",
	"aws_lambda_event_source_mapping":                         "lambda",
	"aws_lambda_function":                                     "lambda",
	"aws_lambda_function_event_invoke_config":                 "lambda",
	"aws_lambda_layer_version":                                "lambda",
	"aws_lambda_permission":                                   "lambda",
	"aws_lambda_provisioned_concurrency_config":               "lambda",
	"aws_launch_configuration":                                "autoscaling",
	"aws_launch_template":                                     "ec2",
	"aws_lb":                                                  "elbv2",
	"aws_lb_cookie_stickiness_policy":                         "elb",
	"aws_lb_listener":                                         "elbv2",
	"aws_lb_listener_certificate":                             "elbv2",
	"aws_lb_listener_rule":                                    "elbv2",
	"aws_lb_ssl_negotiation_policy":                           "elb",
	"aws_lb_target_group":                                     "elbv2",
	"aws_lb_target_group_attachment":                          "elbv2",
	"aws_lex_bot":                                             "lexmodelbuildingservice",
	"aws_lex_bot_alias":                                       "lexmodelbuildingservice",
	"aws_lex_intent":                                          "lexmodelbuildingservice",
	"aws_lex_slot_type":                                       "lexmodelbuildingservice",
	"aws_licensemanager_association":                          "licensemanager",
	"aws_licensemanager_license_configuration":                "licensemanager",
	"aws_lightsail_domain":                                    "lightsail",
	"aws_lightsail_instance":                                  "lightsail",
	"aws_lightsail_key_pair":                                  "lightsail",
	"aws_lightsail_static_ip":                                 "lightsail",
	"aws_lightsail_static_ip_attachment":                      "lightsail",
	"aws_load_balancer_backend_server_policy":                 "elb",
	"aws_load_balancer_listener_policy":                       "elb",
	"aws_load_balancer_policy":                                "elb",
	"aws_macie_member_account_association":                    "macie",
	"aws_macie_s3_bucket_association":                         "macie",
	"aws_main_route_table_association":                        "ec2",
	"aws_media_convert_queue":                                 "mediaconvert",
	"aws_media_package_channel":                               "mediapackage",
	"aws_media_store_container":                               "mediastore",
	"aws_media_store_container_policy":                        "mediastore",
	"aws_mq_broker":                                           "mq",
	"aws_mq_configuration":                                    "mq",
	"aws_msk_cluster":                                         "kafka",
	"aws_msk_configuration":                                   "kafka",
	"aws_msk_scram_secret_association":                        "kafka",
	"aws_nat_gateway":                                         "ec2",
	"aws_neptune_cluster":                                     "neptune",
	"aws_neptune_cluster_instance":                            "neptune",
	"aws_neptune_cluster_parameter_group":                     "neptune",
	"aws_neptune_cluster_snapshot":                            "neptune",
	"aws_neptune_event_subscription":                          "neptune",
	"aws_neptune_parameter_group":                             "neptune",
	"aws_neptune_subnet_group":                                "neptune",
	"aws_network_acl":                                         "ec2",
	"aws_network_acl_rule":                                    "ec2",
	"aws_network_interface":                                   "ec2",
	"aws_network_interface_attachment":                        "ec2",
	"aws_network_interface_sg_attachment":                     "ec2",
	"aws_networkfirewall_firewall":                            "networkfirewall",
	"aws_networkfirewall_firewall_policy":                     "networkfirewall",
	"aws_networkfirewall_logging_configuration":               "networkfirewall",
	"aws_networkfirewall_resource_policy":                     "networkfirewall",
	"aws_networkfirewall_rule_group":                          "networkfirewall",
	"aws_opsworks_application":                                "opsworks",
	"aws_opsworks_custom_layer":                               "opsworks",
	"aws_opsworks_ganglia_layer":                              "opsworks",
	"aws_opsworks_haproxy_layer":                              "opsworks",
	"aws_opsworks_instance":                                   "opsworks",
	"aws_opsworks_java_app_layer":                             "opsworks",
	"aws_opsworks_memcached_layer":                            "opsworks",
	"aws_opsworks_mysql_layer":                                "opsworks",
	"aws_opsworks_nodejs_app_layer":                           "opsworks",
	"aws_opsworks_permission":                                 "opsworks",
	"aws_opsworks_php_app_layer":                              "opsworks",
	"aws_opsworks_rails_app_layer":                            "opsworks",
	"aws_opsworks_rds_db_instance":                            "opsworks",
	"aws_opsworks_stack":                                      "opsworks",
	"aws_opsworks_static_web_layer":                           "opsworks",
	"aws_opsworks_user_profile":                               "opsworks",
	"aws_organizations_account":                               "organizations",
	"aws_organizations_organization":                          "organizations",
	"aws_organizations_organizational_unit":                   "organizations",
	"aws_organizations_policy":                                "organizations",
	"aws_organizations_policy_attachment":                     "organizations",
	"aws_pinpoint_adm_channel":                                "pinpoint",
	"aws_pinpoint_apns_channel":                               "pinpoint",
	"aws_pinpoint_apns_sandbox_channel":                       "pinpoint",
	"aws_pinpoint_apns_voip_channel":                          "pinpoint",
	"aws_pinpoint_apns_voip_sandbox_channel":                  "pinpoint",
	"aws_pinpoint_app":                                        "pinpoint",
	"aws_pinpoint_baidu_channel":                              "pinpoint",
	"aws_pinpoint_email_channel":                              "pinpoint",
	"aws_pinpoint_event_stream":                               "pinpoint",
	"aws_pinpoint_gcm_channel":                                "pinpoint",
	"aws_pinpoint_sms_channel":                                "pinpoint",
	"aws_placement_group":                                     "ec2",
	"aws_prometheus_workspace":                                "prometheusservice",
	"aws_proxy_protocol_policy":                               "elb",
	"aws_qldb_ledger":                                         "qldb",
	"aws_quicksight_group":                                    "quicksight",
	"aws_quicksight_user":                                     "quicksight",
	"aws_ram_principal_association":                           "ram",
	"aws_ram_resource_association":                            "ram",
	"aws_ram_resource_share":                                  "ram",
	"aws_ram_resource_share_accepter":                         "ram",
	"aws_rds_cluster":                                         "rds",
	"aws_rds_cluster_endpoint":                                "rds",
	"aws_rds_cluster_instance":                                "rds",
	"aws_rds_cluster_parameter_group":                         "rds",
	"aws_rds_global_cluster":                                  "rds",
	"aws_redshift_cluster":                                    "redshift",
	"aws_redshift_event_subscription":                         "redshift",
	"aws_redshift_parameter_group":                            "redshift",
	"aws_redshift_security_group":                             "redshift",
	"aws_redshift_snapshot_copy_grant":                        "redshift",
	"aws_redshift_snapshot_schedule":                          "redshift",
	"aws_redshift_snapshot_schedule_association":              "redshift",
	"aws_redshift_subnet_group":                               "redshift",
	"aws_resourcegroups_group":                                "resourcegroups",
	"aws_route":                                               "ec2",
	"aws_route53_delegation_set":                              "route53",
	"aws_route53_health_check":                                "route53",
	"aws_route53_hosted_zone_dnssec":                          "route53",
	"aws_route53_key_signing_key":                             "route53",
	"aws_route53_query_log":                                   "route53",
	"aws_route53_record":                                      "route53",
	"aws_route53_resolver_dnssec_config":                      "route53resolver",
	"aws_route53_resolver_endpoint":                           "route53resolver",
	"aws_route53_resolver_query_log_config":                   "route53resolver",
	"aws_route53_resolver_query_log_config_association":       "route53resolver",
	"aws_route53_resolver_rule":                               "route53resolver",
	"aws_route53_resolver_rule_association":                   "route53resolver",
	"aws_route53_vpc_association_authorization":               "route53",
	"aws_route53_zone":                                        "route53",
	"aws_route53_zone_association":                            "route53",
	"aws_route_table":                                         "ec2",
	"aws_route_table_association":                             "ec2",
	"aws_s3_access_point":                                     "s3control",
	"aws_s3_account_public_access_block":                      "s3control",
	"aws_s3_bucket":                                           "s3",
	"aws_s3_bucket_analytics_configuration":                   "s3",
	"aws_s3_bucket_inventory":                                 "s3",
	"aws_s3_bucket_metric":                                    "s3",
	"aws_s3_bucket_notification":                              "s3",
	"aws_s3_bucket_object":                                    "s3",
	"aws_s3_bucket_ownership_controls":                        "s3",
	"aws_s3_bucket_policy":                                    "s3",
	"aws_s3_bucket_public_access_block":                       "s3",
	"aws_s3_object_copy":                                      "s3",
	"aws_s3control_bucket":                                    "s3control",
	"aws_s3control_bucket_lifecycle_configuration":            "s3control",
	"aws_s3control_bucket_policy":                             "s3control",
	"aws_s3outposts_endpoint":                                 "s3outposts",
	"aws_sagemaker_app":                                       "sagemaker",
	"aws_sagemaker_app_image_config":                          "sagemaker",
	"aws_sagemaker_code_repository":                           "sagemaker",
	"aws_sagemaker_domain":                                    "sagemaker",
	"aws_sagemaker_endpoint":                                  "sagemaker",
	"aws_sagemaker_endpoint_configuration":                    "sagemaker",
	"aws_sagemaker_feature_group":                             "sagemaker",
	"aws_sagemaker_image":                                     "sagemaker",
	"aws_sagemaker_image_version":                             "sagemaker",
	"aws_sagemaker_model":                                     "sagemaker",
	"aws_sagemaker_model_package_group":                       "sagemaker",
	"aws_sagemaker_notebook_instance":                         "sagemaker",
	"aws_sagemaker_notebook_instance_lifecycle_configuration": "sagemaker",
	"aws_sagemaker_user_profile":                              "sagemaker",
	"aws_secretsmanager_secret":                               "secretsmanager",
	"aws_secretsmanager_secret_policy":                        "secretsmanager",
	"aws_secretsmanager_secret_rotation":                      "secretsmanager",
	"aws_secretsmanager_secret_version":                       "secretsmanager",
	"aws_security_group":                                      "ec2",
	"aws_security_group_rule":                                 "ec2",
	"aws_securityhub_account":                                 "securityhub",
	"aws_securityhub_action_target":                           "securityhub",
	"aws_securityhub_invite_accepter":                         "securityhub",
	"aws_securityhub_member":                                  "securityhub",
	"aws_securityhub_organization_admin_account":              "securityhub",
	"aws_securityhub_product_subscription":                    "securityhub",
	"aws_securityhub_standards_subscription":                  "securityhub",
	"aws_service_discovery_http_namespace":                    "servicediscovery",
	"aws_service_discovery_private_dns_namespace":             "servicediscovery",
	"aws_service_discovery_public_dns_namespace":              "servicediscovery",
	"aws_service_discovery_service":                           "servicediscovery",
	"aws_servicecatalog_portfolio":                            "servicecatalog",
	"aws_servicequotas_service_quota":                         "servicequotas",
	"aws_ses_active_receipt_rule_set":                         "ses",
	"aws_ses_configuration_set":                               "ses",
	"aws_ses_domain_dkim":                                     "ses",
	"aws_ses_domain_identity":                                 "ses",
	"aws_ses_domain_identity_verification":                    "ses",
	"aws_ses_domain_mail_from":                                "ses",
	"aws_ses_email_identity":                                  "ses",
	"aws_ses_event_destination":                               "ses",
	"aws_ses_identity_notification_topic":                     "ses",
	"aws_ses_identity_policy":                                 "ses",
	"aws_ses_receipt_filter":                                  "ses",
	"aws_ses_receipt_rule":                                    "ses",
	"aws_ses_receipt_rule_set":                                "ses",
	"aws_ses_template":                                        "ses",
	"aws_sfn_activity":                                        "sfn",
	"aws_sfn_state_machine":                                   "sfn",
	"aws_shield_protection":                                   "shield",
	"aws_signer_signing_job":                                  "signer",
	"aws_signer_signing_profile":                              "signer",
	"aws_signer_signing_profile_permission":                   "signer",
	"aws_simpledb_domain":                                     "simpledb",
	"aws_snapshot_create_volume_permission":                   "ec2",
	"aws_sns_platform_application":                            "sns",
	"aws_sns_sms_preferences":                                 "sns",
	"aws_sns_topic":                                           "sns",
	"aws_sns_topic_policy":                                    "sns",
	"aws_sns_topic_subscription":                              "sns",
	"aws_spot_datafeed_subscription":                          "ec2",
	"aws_spot_fleet_request":                                  "ec2",
	"aws_spot_instance_request":                               "ec2",
	"aws_sqs_queue":                                           "sqs",
	"aws_sqs_queue_policy":                                    "sqs",
	"aws_ssm_activation":                                      "ssm",
	"aws_ssm_association":                                     "ssm",
	"aws_ssm_document":                                        "ssm",
	"aws_ssm_maintenance_window":                              "ssm",
	"aws_ssm_maintenance_window_target":                       "ssm",
	"aws_ssm_maintenance_window_task":                         "ssm",
	"aws_ssm_parameter":                                       "ssm",
	"aws_ssm_patch_baseline":                                  "ssm",
	"aws_ssm_patch_group":                                     "ssm",
	"aws_ssm_resource_data_sync":                              "ssm",
	"aws_ssoadmin_account_assignment":                         "ssoadmin",
	"aws_ssoadmin_managed_policy_attachment":                  "ssoadmin",
	"aws_ssoadmin_permission_set":                             "ssoadmin",
	"aws_ssoadmin_permission_set_inline_policy":               "ssoadmin",
	"aws_storagegateway_cache":                                "storagegateway",
	"aws_storagegateway_cached_iscsi_volume":                  "storagegateway",
	"aws_storagegateway_gateway":                              "storagegateway",
	"aws_storagegateway_nfs_file_share":                       "storagegateway",
	"aws_storagegateway_smb_file_share":                       "storagegateway",
	"aws_storagegateway_stored_iscsi_volume":                  "storagegateway",
	"aws_storagegateway_tape_pool":                            "storagegateway",
	"aws_storagegateway_upload_buffer":                        "storagegateway",
	"aws_storagegateway_working_storage":                      "storagegateway",
	"aws_subnet":                                              "ec2",
	"aws_swf_domain":                                          "swf",
	"aws_synthetics_canary":                                   "synthetics",
	"aws_transfer_server":                                     "transfer",
	"aws_transfer_ssh_key":                                    "transfer",
	"aws_transfer_user":                                       "transfer",
	"aws_volume_attachment":                                   "ec2",
	"aws_vpc":                                                 "ec2",
	"aws_vpc_dhcp_options":                                    "ec2",
	"aws_vpc_dhcp_options_association":                        "ec2",
	"aws_vpc_endpoint":                                        "ec2",
	"aws_vpc_endpoint_connection_notification":                "ec2",
	"aws_vpc_endpoint_route_table_association":                "ec2",
	"aws_vpc_endpoint_service":                                "ec2",
	"aws_vpc_endpoint_service_allowed_principal":              "ec2",
	"aws_vpc_endpoint_subnet_association":                     "ec2",
	"aws_vpc_ipv4_cidr_block_association":                     "ec2",
	"aws_vpc_peering_connection":                              "ec2",
	"aws_vpc_peering_connection_accepter":                     "ec2",
	"aws_vpc_peering_connection_options":                      "ec2",
	"aws_vpn_connection":                                      "ec2",
	"aws_vpn_connection_route":                                "ec2",
	"aws_vpn_gateway":                                         "ec2",
	"aws_vpn_gateway_attachment":                              "ec2",
	"aws_vpn_gateway_route_propagation":                       "ec2",
	"aws_waf_byte_match_set":                                  "waf",
	"aws_waf_geo_match_set":                                   "waf",
	"aws_waf_ipset":                                           "waf",
	"aws_waf_rate_based_rule":                                 "waf",
	"aws_waf_regex_match_set":                                 "waf",
	"aws_waf_regex_pattern_set":                               "waf",
	"aws_waf_rule":                                            "waf",
	"aws_waf_rule_group":                                      "waf",
	"aws_waf_size_constraint_set":                             "waf",
	"aws_waf_sql_injection_match_set":                         "waf",
	"aws_waf_web_acl":                                         "waf",
	"aws_waf_xss_match_set":                                   "waf",
	"aws_wafregional_byte_match_set":                          "wafregional",
	"aws_wafregional_geo_match_set":                           "wafregional",
	"aws_wafregional_ipset":                                   "wafregional",
	"aws_wafregional_rate_based_rule":                         "wafregional",
	"aws_wafregional_regex_match_set":                         "wafregional",
	"aws_wafregional_regex_pattern_set":                       "wafregional",
	"aws_wafregional_rule":                                    "wafregional",
	"aws_wafregional_rule_group":                              "wafregional",
	"aws_wafregional_size_constraint_set":                     "wafregional",
	"aws_wafregional_sql_injection_match_set":                 "wafregional",
	"aws_wafregional_web_acl":                                 "wafregional",
	"aws_wafregional_web_acl_association":                     "wafregional",
	"aws_wafregional_xss_match_set":                           "wafregional",
	"aws_wafv2_ip_set":                                        "wafv2",
	"aws_wafv2_regex_pattern_set":                             "wafv2",
	"aws_wafv2_rule_group":                                    "wafv2",
	"aws_wafv2_web_acl":                                       "wafv2",
	"aws_wafv2_web_acl_association":                           "wafv2",
	"aws_wafv2_web_acl_logging_configuration":                 "wafv2",
	"aws_worklink_fleet":                                      "worklink",
	"aws_worklink_website_certificate_authority_association":  "worklink",
	"aws_workspaces_directory":                                "workspaces",
	"aws_workspaces_ip_group":                                 "workspaces",
	"aws_workspaces_workspace":                                "workspaces",
	"aws_xray_encryption_config":                              "xray",
	"aws_xray_group":                                          "xray",
	"aws_xray_sampling_rule":                                  "xray",
}
